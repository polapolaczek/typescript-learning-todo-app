{"version":3,"sources":["common-hooks/useTodos.tsx","common-components/AddTodoForm/AddTodoFormContext.tsx","common-components/AddTodoForm/AddTodoInput.tsx","common-components/AddTodoForm/AddTodoButton.tsx","common-components/AddTodoForm/useAddTodo.tsx","common-components/AddTodoForm/AddTodoForm.tsx","common-components/TodosList.tsx","common-components/TodoItem.tsx","views/MainView.tsx","constants/labels.ts","App.tsx","index.tsx"],"names":["useTodos","useState","todos","setTodos","addTodo","useCallback","text","id","prev","newTodo","AddTodoContext","createContext","AddTodoInput","context","React","useContext","Error","useAddTodoContext","todoInput","handleTodoChange","type","value","onChange","AddTodoButton","children","useAddTodo","onAdd","setTodoInput","e","target","handleTodoSubmit","preventDefault","uniqueId","AddTodoForm","Provider","onSubmit","TodosList","map","el","key","TodoItem","MainView","todo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAkBeA,EAfE,WAAO,IAAD,EACOC,mBAAkB,IADzB,mBACZC,EADY,KACLC,EADK,KAYnB,MAAO,CAAED,QAAOE,QATAC,uBACZ,SAACC,EAAcC,GAAf,OACIJ,GAAS,SAACK,GACN,IAAMC,EAAiB,CAAEH,OAAMC,MAC/B,MAAM,GAAN,mBAAWC,GAAX,CAAiBC,SAEzB,MCLKC,EAAiBC,wBAAwC,ICCvDC,EALM,WAAO,IAAD,EDMM,WAC7B,IAAMC,EAAUC,IAAMC,WAAWL,GACjC,IAAKG,EACD,MAAM,IAAIG,MAAM,+CAEpB,OAAOH,ECViCI,GAAhCC,EADe,EACfA,UAAWC,EADI,EACJA,iBACnB,OAAO,2BAAOC,KAAK,OAAOC,MAAOH,EAAWI,SAAUH,KCM3CI,EAJO,SAAC,GAA4C,IAA1CjB,EAAyC,EAAzCA,KAAMkB,EAAmC,EAAnCA,SAC3B,OAAO,4BAAQJ,KAAK,UAAUd,GAAQkB,I,OCe3BC,EApBI,SAACC,GAA+C,IAAD,EAC5BzB,mBAAiB,IADW,mBACvDiB,EADuD,KAC5CS,EAD4C,KAGxDR,EAAmBd,uBACrB,SAACuB,GAAD,OAA4CD,EAAaC,EAAEC,OAAOR,SAClE,IAGES,EAAmBzB,uBACrB,SAACuB,GACGA,EAAEG,iBACFJ,EAAa,IACbD,EAAMR,EAAWc,wBAErB,CAACd,EAAWQ,IAGhB,MAAO,CAAER,YAAWC,mBAAkBW,qBCI3BG,EAfK,SAAC,GAA2C,IAAzCT,EAAwC,EAAxCA,SAAUE,EAA8B,EAA9BA,MAA8B,EACDD,EAAWC,GAA7DR,EADmD,EACnDA,UAAWC,EADwC,EACxCA,iBAAkBW,EADsB,EACtBA,iBAErC,OACI,kBAACpB,EAAewB,SAAhB,CACIb,MAAO,CACHH,YACAC,qBAGJ,0BAAMgB,SAAUL,GAAmBN,KCHhCY,EARG,SAAC,GAAD,IAAGlC,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,SAAV,OACd,4BACKtB,EAAMmC,KAAI,SAACC,GAAD,OACP,wBAAIC,IAAKD,EAAG/B,IAAKiB,EAASc,SCNvBE,EAFE,SAAC,GAAD,IAAGlC,EAAH,EAAGA,KAAH,OAAqB,6BAAMA,ICwB7BmC,EAjBE,WAAO,IAAD,EACQzC,IAAnBE,EADW,EACXA,MAAOE,EADI,EACJA,QAEf,OACI,oCACI,4BCfU,SDgBV,kBAAC,EAAD,CAAasB,MAAOtB,GAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,KCjBU,QDmBd,kBAAC,EAAD,CAAWF,MAAOA,IACb,SAACwC,GAAD,OAAiB,kBAAC,EAAaA,QEhBjCC,EAFH,kBAAM,kBAAC,EAAD,OCClBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.25ad9fc0.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { ITodo } from \"../types\";\r\n\r\nconst useTodos = () => {\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n    const addTodo = useCallback(\r\n        (text: string, id: string) =>\r\n            setTodos((prev) => {\r\n                const newTodo: ITodo = { text, id };\r\n                return [...prev, newTodo];\r\n            }),\r\n        []\r\n    );\r\n\r\n    return { todos, addTodo };\r\n};\r\n\r\nexport default useTodos;\r\n","import React, { createContext } from \"react\";\r\n\r\nexport interface IAddTodoContext {\r\n    todoInput: string;\r\n    handleTodoChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const AddTodoContext = createContext<Partial<IAddTodoContext>>({});\r\n\r\nexport const useAddTodoContext = () => {\r\n    const context = React.useContext(AddTodoContext);\r\n    if (!context) {\r\n        throw new Error(\"AddTodoContext used outside of its Provider\");\r\n    }\r\n    return context;\r\n};\r\n","import React from \"react\";\r\nimport { useAddTodoContext } from \"./AddTodoFormContext\";\r\n\r\nconst AddTodoInput = () => {\r\n    const { todoInput, handleTodoChange } = useAddTodoContext();\r\n    return <input type=\"text\" value={todoInput} onChange={handleTodoChange} />;\r\n};\r\n\r\nexport default AddTodoInput;\r\n","import React from \"react\";\r\n\r\ntype AddTodoButtonProps = {\r\n    text?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst AddTodoButton = ({ text, children }: AddTodoButtonProps) => {\r\n    return <button type=\"submit\">{text || children}</button>;\r\n};\r\n\r\nexport default AddTodoButton;\r\n","import { useState, useCallback } from \"react\";\r\nimport { uniqueId } from \"lodash\";\r\n\r\nconst useAddTodo = (onAdd: (text: string, id: string) => void) => {\r\n    const [todoInput, setTodoInput] = useState<string>(\"\");\r\n\r\n    const handleTodoChange = useCallback(\r\n        (e: React.ChangeEvent<HTMLInputElement>) => setTodoInput(e.target.value),\r\n        []\r\n    );\r\n\r\n    const handleTodoSubmit = useCallback(\r\n        (e: React.FormEvent<HTMLFormElement>) => {\r\n            e.preventDefault();\r\n            setTodoInput(\"\");\r\n            onAdd(todoInput, uniqueId());\r\n        },\r\n        [todoInput, onAdd]\r\n    );\r\n\r\n    return { todoInput, handleTodoChange, handleTodoSubmit };\r\n};\r\n\r\nexport default useAddTodo;\r\n","import React from \"react\";\r\nimport { AddTodoContext } from \"./AddTodoFormContext\";\r\nimport useAddTodo from \"./useAddTodo\";\r\n\r\ntype AddTodoFormProps = {\r\n    children: React.ReactNode;\r\n    onAdd: (todo: string, id: string) => void;\r\n};\r\n\r\nconst AddTodoForm = ({ children, onAdd }: AddTodoFormProps) => {\r\n    const { todoInput, handleTodoChange, handleTodoSubmit } = useAddTodo(onAdd);\r\n\r\n    return (\r\n        <AddTodoContext.Provider\r\n            value={{\r\n                todoInput,\r\n                handleTodoChange,\r\n            }}\r\n        >\r\n            <form onSubmit={handleTodoSubmit}>{children}</form>\r\n        </AddTodoContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from \"react\";\r\nimport { ITodo } from \"../types\";\r\n\r\ntype TodosListProps = {\r\n    todos: ITodo[];\r\n    children: (el: ITodo) => React.ReactNode;\r\n};\r\n\r\nconst TodosList = ({ todos, children }: TodosListProps) => (\r\n    <ul>\r\n        {todos.map((el) => (\r\n            <li key={el.id}>{children(el)}</li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default TodosList;\r\n","import React from \"react\";\r\nimport { ITodo } from \"../types\";\r\n\r\nconst TodoItem = ({ text }: ITodo) => <div>{text}</div>;\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport { HEADER, ADD_BUTTON } from \"../constants/labels\";\r\nimport useTodos from \"../common-hooks/useTodos\";\r\nimport AddTodoInput from \"../common-components/AddTodoForm/AddTodoInput\";\r\nimport AddTodoButton from \"../common-components/AddTodoForm/AddTodoButton\";\r\nimport AddTodoForm from \"../common-components/AddTodoForm/AddTodoForm\";\r\nimport TodosList from \"../common-components/TodosList\";\r\nimport TodoItem from \"../common-components/TodoItem\";\r\nimport { ITodo } from \"../types\";\r\n\r\nconst MainView = () => {\r\n    const { todos, addTodo } = useTodos();\r\n\r\n    return (\r\n        <>\r\n            <h1>{HEADER}</h1>\r\n            <AddTodoForm onAdd={addTodo}>\r\n                <AddTodoInput />\r\n                <AddTodoButton>{ADD_BUTTON}</AddTodoButton>\r\n            </AddTodoForm>\r\n            <TodosList todos={todos}>\r\n                {(todo: ITodo) => <TodoItem {...todo} />}\r\n            </TodosList>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainView;\r\n","export const HEADER = \"Todos\";\r\nexport const ADD_BUTTON = \"Add\";\r\n","import React from \"react\";\nimport MainView from \"./views/MainView\";\n\nconst App = () => <MainView />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}